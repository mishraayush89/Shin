apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply from: "$rootDir/gradle/scripts/ktlint.gradle"
apply from: "$rootDir/gradle/scripts/versioning.gradle"
apply from: "$rootDir/gradle/scripts/artifacts.gradle"
apply from: "$rootDir/gradle/scripts/release.gradle"
apply from: "$rootDir/gradle/scripts/const.gradle"

android {
    compileSdkVersion 29
    buildToolsVersion "30.0.0"

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    buildFeatures {
        dataBinding true
    }

    defaultConfig {
        applicationId "anime.stream.shin"
        minSdkVersion 21
        targetSdkVersion 29

        archivesBaseName = "shin-$versionName"

        versionCode buildVersionCode()
        versionName buildVersionName()

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
        sourceSets {
            androidTest.assets.srcDirs += files("$projectDir/schemas".toString())
        }
    }

    signingConfigs {
        release {
            storeFile file("keystore/release-key.keystore")
            storePassword getStorePassword()
            keyAlias getKeyAlias()
            keyPassword getPassword()
        }
    }

    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            pseudoLocalesEnabled false
            manifestPlaceholders = [
                    appIcon     : "@mipmap/ic_launcher_blue",
                    appIconRound: "@mipmap/ic_launcher_blue_round"
            ]
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            manifestPlaceholders = [
                    appIcon     : "@mipmap/ic_launcher_red",
                    appIconRound: "@mipmap/ic_launcher_red_round"
            ]
        }
    }
}

dependencies {
    implementation project(path: ':core')
    implementation project(path: ':libNetwork')
    implementation fileTree(dir: 'libs', include: ['*.jar'])


    implementation 'androidx.core:core-ktx:1.3.1'
    implementation 'androidx.appcompat:appcompat:1.1.0'

    testImplementation "junit:junit:$junit"
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    debugImplementation "com.squareup.leakcanary:leakcanary-android:$leakCanary"
    androidTestImplementation "androidx.arch.core:core-testing:$coreTesting"

    compileOnly "com.squareup.inject:assisted-inject-annotations-dagger2:$assistedInject"
    kapt "com.squareup.inject:assisted-inject-processor-dagger2:$assistedInject"

    api "com.google.dagger:dagger:$dagger"
    kapt "com.google.dagger:dagger-android-processor:$dagger"
    kapt "com.google.dagger:dagger-compiler:$dagger"
}