apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply from: "$rootDir/gradle/scripts/ktlint.gradle"
apply from: "$rootDir/gradle/scripts/const.gradle"
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 29
    buildToolsVersion "30.0.0"

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }


    kotlinOptions {
        jvmTarget = "1.8"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.1'
    implementation 'androidx.appcompat:appcompat:1.1.0'

    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycleKtx"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycleKtx"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycleKtx"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycleKtx"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycleKtx"
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycleKtx"

    implementation "androidx.fragment:fragment-ktx:$fragmentKtx"

    testImplementation "junit:junit:$junit"
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'


    api "com.google.dagger:dagger:$dagger"
    kapt "com.google.dagger:dagger-android-processor:$dagger"
    kapt "com.google.dagger:dagger-compiler:$dagger"

    compileOnly "com.squareup.inject:assisted-inject-annotations-dagger2:$assistedInject"
    kapt "com.squareup.inject:assisted-inject-processor-dagger2:$assistedInject"
}